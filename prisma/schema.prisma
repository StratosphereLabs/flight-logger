generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByNulls"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                  Int      @id @default(autoincrement())
  username            String   @unique
  password            String?
  email               String   @unique
  firstName           String
  lastName            String
  admin               Boolean  @default(false)
  passwordResetToken  String?
  passwordResetAt     DateTime?
  flights             flight[]
  trips               trip[]
}

model trip {
  id      String   @id @default(uuid()) @db.Uuid
  userId  Int
  name    String
  user    user     @relation(fields: [userId], references: [id])
  flights flight[]
}

model flight {
  id                 String         @id @default(uuid()) @db.Uuid
  userId             Int
  tripId             String?        @db.Uuid
  departureAirportId String
  arrivalAirportId   String
  airlineId          String?
  operatorAirlineId  String?
  flightNumber       Int?
  callsign           String?
  aircraftTypeId     String?
  tailNumber         String?
  outTime            String
  offTime            String?
  onTime             String?
  inTime             String
  class              FlightClass?
  seatNumber         String?
  seatPosition       SeatPosition?
  reason             FlightReason?
  comments           String?
  trackingLink       String?
  aircraftType       aircraft_type? @relation(fields: [aircraftTypeId], references: [id])
  airline            airline?       @relation("flights", fields: [airlineId], references: [id])
  arrivalAirport     airport        @relation("arrivalFlights", fields: [arrivalAirportId], references: [id])
  departureAirport   airport        @relation("departureFlights", fields: [departureAirportId], references: [id])
  operatorAirline    airline?       @relation("operatorFlights", fields: [operatorAirlineId], references: [id])
  trip               trip?          @relation(fields: [tripId], references: [id])
  user               user           @relation(fields: [userId], references: [id])
}

model aircraft_type {
  id      String   @id
  iata    String
  icao    String
  name    String
  class   String
  flights flight[]
}

model airline {
  id              String   @id
  iata            String
  icao            String
  name            String
  callsign        String?
  fleetSize       Int?
  destinations    Int?
  logo            String?
  wiki            String?
  flights         flight[] @relation("flights")
  operatorFlights flight[] @relation("operatorFlights")
}

model airport {
  id               String   @id
  type             String
  name             String
  lat              Float
  lon              Float
  elevation        Int?
  continent        String
  countryId        String
  regionId         String
  municipality     String
  timeZone         String
  scheduledService Boolean
  ident            String
  gps              String
  iata             String
  local            String
  country          country  @relation(fields: [countryId], references: [id])
  region           region   @relation(fields: [regionId], references: [id])
  arrivalFlights   flight[] @relation("arrivalFlights")
  departureFlights flight[] @relation("departureFlights")
}

model country {
  id        String    @id
  name      String
  continent String
  wiki      String?
  airports  airport[]
  regions   region[]
}

model region {
  id        String    @id
  name      String
  continent String
  countryId String
  wiki      String?
  country   country   @relation(fields: [countryId], references: [id])
  airports  airport[]
}

enum FlightClass {
  BASIC
  ECONOMY
  PREMIUM
  BUSINESS
  FIRST
}

enum SeatPosition {
  AISLE
  MIDDLE
  WINDOW
}

enum FlightReason {
  LEISURE
  BUSINESS
  OTHER
}
