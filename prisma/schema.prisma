generator client {
  provider        = "prisma-client-js"
}

generator zod {
  provider        = "zod-prisma-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                  Int       @id @default(autoincrement())
  username            String    @unique
  password            String?
  email               String    @unique
  firstName           String
  lastName            String
  admin               Boolean   @default(false)
  passwordResetToken  String?
  passwordResetAt     DateTime?
  flights             flight[]
  trips               trip[]
  itineraries         itinerary[]
  createdAt           DateTime  @default(now())
  updatedAt           DateTime? @updatedAt
}

model trip {
  id        String    @id @default(uuid()) @db.Uuid
  userId    Int
  name      String
  user      user      @relation(fields: [userId], references: [id])
  outTime   DateTime
  inTime    DateTime
  flights   flight[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model itinerary {
  id        String    @id @default(uuid()) @db.Uuid
  userId    Int?
  name      String
  flights   String
  user      user?     @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model flight {
  id                 String         @id @default(uuid()) @db.Uuid
  userId             Int
  tripId             String?        @db.Uuid
  departureAirportId String
  arrivalAirportId   String
  airlineId          String?
  operatorAirlineId  String?
  flightNumber       Int?
  callsign           String?
  aircraftTypeId     String?
  tailNumber         String?
  airframeId         String?
  outTime            DateTime
  offTime            DateTime?
  onTime             DateTime?
  inTime             DateTime
  duration           Int            @default(0)
  class              FlightClass?
  seatNumber         String?
  seatPosition       SeatPosition?
  reason             FlightReason?
  comments           String?
  trackingLink       String?
  airframe           airframe?      @relation(fields: [airframeId], references: [icao24])
  aircraftType       aircraft_type? @relation(fields: [aircraftTypeId], references: [id])
  airline            airline?       @relation("flights", fields: [airlineId], references: [id])
  arrivalAirport     airport        @relation("arrivalFlights", fields: [arrivalAirportId], references: [id])
  departureAirport   airport        @relation("departureFlights", fields: [departureAirportId], references: [id])
  operatorAirline    airline?       @relation("operatorFlights", fields: [operatorAirlineId], references: [id])
  trip               trip?          @relation(fields: [tripId], references: [id])
  user               user           @relation(fields: [userId], references: [id])
  createdAt          DateTime       @default(now())
  updatedAt          DateTime?      @updatedAt
}

model manufacturer {
  code              String        @id
  name              String
  airframes         airframe[]
}

model airframe {
  icao24                String        @id
  registration          String
  manufacturerCode      String
  manufacturer          manufacturer  @relation(fields: [manufacturerCode], references: [code])
  model                 String?
  typeCode              String?
  serialNumber          String?
  lineNumber            String?
  icaoAircraftType      String?
  operatorId            String?
  operator              airline?      @relation("airframes", fields: [operatorId], references: [id])
  owner                 String?
  testReg               String?
  registrationDate      DateTime?     @db.Date
  registrationExprDate  DateTime?     @db.Date
  builtDate             DateTime?     @db.Date
  engines               String?
  flights               flight[]
}

model aircraft_type {
  id      String   @id
  iata    String
  icao    String
  name    String
  class   String
  flights flight[]
}

model airline {
  id              String   @id
  iata            String
  icao            String
  name            String
  callsign        String?
  fleetSize       Int?
  destinations    Int?
  logo            String?
  wiki            String?
  airframes       airframe[]  @relation("airframes")
  flights         flight[]    @relation("flights")
  operatorFlights flight[]    @relation("operatorFlights")
}

model airport {
  id               String   @id
  type             String
  name             String
  lat              Float
  lon              Float
  elevation        Int?
  continent        String
  countryId        String
  regionId         String
  municipality     String
  timeZone         String
  scheduledService Boolean
  ident            String
  gps              String
  iata             String
  local            String
  country          country  @relation(fields: [countryId], references: [id])
  region           region   @relation(fields: [regionId], references: [id])
  arrivalFlights   flight[] @relation("arrivalFlights")
  departureFlights flight[] @relation("departureFlights")
}

model country {
  id        String    @id
  name      String
  continent String
  wiki      String?
  airports  airport[]
  regions   region[]
}

model region {
  id        String    @id
  name      String
  continent String
  countryId String
  wiki      String?
  country   country   @relation(fields: [countryId], references: [id])
  airports  airport[]
}

enum FlightClass {
  BASIC
  ECONOMY
  PREMIUM
  BUSINESS
  FIRST
}

enum SeatPosition {
  AISLE
  MIDDLE
  WINDOW
}

enum FlightReason {
  LEISURE
  BUSINESS
  CREW
}
